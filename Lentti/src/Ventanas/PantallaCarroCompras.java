/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import Controlador.consultasBaseDeDatos;
import Modelo.BaseDeDatos;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
/**
 *
 * @author Estefania
 */
public class PantallaCarroCompras extends javax.swing.JFrame {
 
    ArrayList<String> restaurantesCC= new ArrayList<>();
    ArrayList<String> platoCC= new ArrayList<>();
    String nUsuario;
    float subtotalF;

    public PantallaCarroCompras() {
      
        initComponents();
        transparenciaDelBoton();
        FondoCCVacio.setVisible(false);
        textCarroV.setVisible(false);
        mostrarPedidos();
        this.setLocationRelativeTo(null);
        
    }
    
    public PantallaCarroCompras(String pUsuario) {
        initComponents();
        FondoCCVacio.setVisible(false);
        textCarroV.setVisible(false);
        transparenciaDelBoton();
        nUsuario = pUsuario;
        mostrarPedidos();
       
        this.setLocationRelativeTo(null);
        
    }
    /*funcion para agregar icono del programa*/
    public Image getIconImage()
    {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Imagenes/lentti.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        subTotal = new javax.swing.JTextField();
        Tapar = new javax.swing.JTextField();
        TextRestUnid = new javax.swing.JTextField();
        precioPlato = new javax.swing.JTextField();
        BotonRestUnid = new javax.swing.JButton();
        VaciarCC = new javax.swing.JButton();
        BotonRealizarPedido = new javax.swing.JButton();
        BotonBorrarUnid = new javax.swing.JButton();
        BotonSumUnid = new javax.swing.JButton();
        BotonAtrasCC = new javax.swing.JButton();
        ListaPedidosCC = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        NombreRestaurante = new javax.swing.JTextField();
        FotoRestaurante = new javax.swing.JLabel();
        FotoPedido = new javax.swing.JLabel();
        nombrePlato = new javax.swing.JTextField();
        descripcionPlato = new javax.swing.JTextField();
        cantidadCC = new javax.swing.JTextField();
        FondoPantalla = new javax.swing.JLabel();
        textCarroV = new javax.swing.JTextField();
        FondoCCVacio = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImage(getIconImage());
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        subTotal.setEditable(false);
        subTotal.setBackground(new java.awt.Color(114, 203, 131));
        subTotal.setFont(new java.awt.Font("Yu Gothic", 0, 18)); // NOI18N
        subTotal.setForeground(new java.awt.Color(255, 255, 255));
        subTotal.setBorder(null);
        subTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subTotalActionPerformed(evt);
            }
        });
        getContentPane().add(subTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 630, 160, -1));

        Tapar.setEditable(false);
        Tapar.setBackground(new java.awt.Color(255, 254, 251));
        Tapar.setBorder(null);
        getContentPane().add(Tapar, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 280, 200, 70));

        TextRestUnid.setEditable(false);
        TextRestUnid.setBackground(new java.awt.Color(235, 235, 235));
        TextRestUnid.setFont(new java.awt.Font("Yu Gothic", 1, 48)); // NOI18N
        TextRestUnid.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TextRestUnid.setText("-");
        TextRestUnid.setBorder(null);
        TextRestUnid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextRestUnidActionPerformed(evt);
            }
        });
        getContentPane().add(TextRestUnid, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 310, 50, 30));

        precioPlato.setBackground(new java.awt.Color(255, 254, 251));
        precioPlato.setFont(new java.awt.Font("Yu Gothic", 1, 18)); // NOI18N
        precioPlato.setBorder(null);
        getContentPane().add(precioPlato, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 280, 160, -1));

        BotonRestUnid.setFont(new java.awt.Font("Yu Gothic", 1, 48)); // NOI18N
        BotonRestUnid.setBorder(null);
        BotonRestUnid.setBorderPainted(false);
        BotonRestUnid.setContentAreaFilled(false);
        BotonRestUnid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonRestUnidMouseClicked(evt);
            }
        });
        getContentPane().add(BotonRestUnid, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 310, 70, 30));

        VaciarCC.setBackground(new java.awt.Color(237, 79, 79));
        VaciarCC.setFont(new java.awt.Font("Yu Gothic", 0, 18)); // NOI18N
        VaciarCC.setText("Vaciar carrito de compras ");
        VaciarCC.setBorder(null);
        VaciarCC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                VaciarCCMouseClicked(evt);
            }
        });
        VaciarCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VaciarCCActionPerformed(evt);
            }
        });
        getContentPane().add(VaciarCC, new org.netbeans.lib.awtextra.AbsoluteConstraints(269, 520, 230, -1));

        BotonRealizarPedido.setBorder(null);
        BotonRealizarPedido.setBorderPainted(false);
        BotonRealizarPedido.setContentAreaFilled(false);
        BotonRealizarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRealizarPedidoActionPerformed(evt);
            }
        });
        getContentPane().add(BotonRealizarPedido, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 600, 700, 90));

        BotonBorrarUnid.setBorder(null);
        BotonBorrarUnid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonBorrarUnidMouseClicked(evt);
            }
        });
        getContentPane().add(BotonBorrarUnid, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 310, 40, 30));

        BotonSumUnid.setBorder(null);
        BotonSumUnid.setBorderPainted(false);
        BotonSumUnid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonSumUnidMouseClicked(evt);
            }
        });
        getContentPane().add(BotonSumUnid, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 310, 40, 30));

        BotonAtrasCC.setBackground(new java.awt.Color(255, 255, 255));
        BotonAtrasCC.setFont(new java.awt.Font("Yu Gothic", 0, 18)); // NOI18N
        BotonAtrasCC.setText("<<  AtrÃ¡s");
        BotonAtrasCC.setBorder(null);
        BotonAtrasCC.setBorderPainted(false);
        BotonAtrasCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAtrasCCActionPerformed(evt);
            }
        });
        getContentPane().add(BotonAtrasCC, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 110, -1));

        jList1.setFont(new java.awt.Font("Yu Gothic", 0, 18)); // NOI18N
        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        ListaPedidosCC.setViewportView(jList1);

        getContentPane().add(ListaPedidosCC, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, 730, 100));

        NombreRestaurante.setEditable(false);
        NombreRestaurante.setBackground(new java.awt.Color(255, 254, 251));
        NombreRestaurante.setFont(new java.awt.Font("Yu Gothic", 0, 24)); // NOI18N
        NombreRestaurante.setBorder(null);
        NombreRestaurante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NombreRestauranteActionPerformed(evt);
            }
        });
        getContentPane().add(NombreRestaurante, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 130, 600, 40));
        getContentPane().add(FotoRestaurante, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 70, 40));
        getContentPane().add(FotoPedido, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 200, 160));

        nombrePlato.setBackground(new java.awt.Color(255, 254, 251));
        nombrePlato.setFont(new java.awt.Font("Yu Gothic", 0, 24)); // NOI18N
        nombrePlato.setBorder(null);
        getContentPane().add(nombrePlato, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 200, 470, 30));

        descripcionPlato.setEditable(false);
        descripcionPlato.setBackground(new java.awt.Color(255, 254, 251));
        descripcionPlato.setFont(new java.awt.Font("Yu Gothic", 0, 18)); // NOI18N
        descripcionPlato.setBorder(null);
        getContentPane().add(descripcionPlato, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 240, 520, 40));

        cantidadCC.setEditable(false);
        cantidadCC.setBackground(new java.awt.Color(235, 235, 235));
        cantidadCC.setFont(new java.awt.Font("Yu Gothic", 0, 18)); // NOI18N
        cantidadCC.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        cantidadCC.setText("1");
        cantidadCC.setBorder(null);
        getContentPane().add(cantidadCC, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 310, 70, 30));

        FondoPantalla.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/PrincipalCarro.png"))); // NOI18N
        FondoPantalla.setText("dffdfdfd");
        getContentPane().add(FondoPantalla, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, -1));

        textCarroV.setBackground(new java.awt.Color(235, 235, 235));
        textCarroV.setFont(new java.awt.Font("Yu Gothic", 1, 36)); // NOI18N
        textCarroV.setText("AÃºn no tienes productos en tu carrito");
        textCarroV.setBorder(null);
        getContentPane().add(textCarroV, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 380, 660, 60));

        FondoCCVacio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/CarroVacio2.png"))); // NOI18N
        getContentPane().add(FondoCCVacio, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NombreRestauranteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NombreRestauranteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NombreRestauranteActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
      
        //A medida que se van seleccionando opciones de la lista se cambia la informacion
        Tapar.setVisible(false);
        float unaUnidad = 1;
        nombrePlato.setText(jList1.getSelectedValue().toString());
        String pla = jList1.getSelectedValue().toString();
        String res = null; 
        
        for(int i = 0; i < platoCC.size();i++){
            if(platoCC.get(i) == pla){
               NombreRestaurante.setText(restaurantesCC.get(i));
               res = restaurantesCC.get(i);
            }
        }
        
        consultasBaseDeDatos consulta = new BaseDeDatos();
        descripcionPlato.setText(consulta.darDescripcionPlato(res, pla));
        precioPlato.setText( Float.toString(consulta.darPrecioPlato(res, pla)));
        cantidadCC.setText(Float.toString(consulta.darCantidad(nUsuario, res, pla)));
        if(consulta.darCantidad(nUsuario, res, pla)>unaUnidad){
            TextRestUnid.setVisible(true);
            BotonRestUnid.setVisible(true);
            BotonBorrarUnid.setVisible(false);            
        }
        else{
            TextRestUnid.setVisible(false);
            BotonRestUnid.setVisible(false);
            BotonBorrarUnid.setVisible(true);
            
        }
        
       ImageIcon imagenRest = consulta.ImagenRestaurante(res);
       if(imagenRest != null){
           FotoRestaurante.setVisible(true);
           Icon Etiqueta = new ImageIcon(imagenRest.getImage().getScaledInstance(this.FotoRestaurante.getWidth(), this.FotoRestaurante.getHeight(), Image.SCALE_SMOOTH));
           this.FotoRestaurante.setIcon(Etiqueta);
       }
       
       ImageIcon imagenPlat= consulta.ImagenPlato(pla, res);
       if(imagenPlat != null){
           FotoPedido.setVisible(true);
           Icon EtiquetaP = new ImageIcon(imagenPlat.getImage().getScaledInstance(this.FotoPedido.getWidth(), this.FotoPedido.getHeight(), Image.SCALE_SMOOTH));
           this.FotoPedido.setIcon(EtiquetaP);
       }
        
       
    }//GEN-LAST:event_jList1MouseClicked

    private void BotonAtrasCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAtrasCCActionPerformed
        // TODO add your handling code here:
        
        PantallaClienteInicio pantalla = new PantallaClienteInicio(nUsuario);
        pantalla.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BotonAtrasCCActionPerformed

    private void BotonSumUnidMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonSumUnidMouseClicked
        // TODO add your handling code here:
        
        consultasBaseDeDatos consulta = new BaseDeDatos();
        float cantidad = Float.parseFloat(cantidadCC.getText());
        cantidad+=1;
        boolean rest = consulta.ModificarCantidad(nUsuario, NombreRestaurante.getText(),nombrePlato.getText(), cantidad);
        cantidadCC.setText(Float.toString(cantidad));
        
        float valor = 0;
        valor = consulta.darPrecioPlato(NombreRestaurante.getText(), nombrePlato.getText());
        float lol = subtotalF + valor;
        subTotal.setText(Float.toString(lol));
        
    }//GEN-LAST:event_BotonSumUnidMouseClicked

    private void VaciarCCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VaciarCCMouseClicked
        boolean res;
        consultasBaseDeDatos consulta = new BaseDeDatos();
        res= consulta.VaciarCarrito(nUsuario);
        PantallaVacia();
    }//GEN-LAST:event_VaciarCCMouseClicked

    private void TextRestUnidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextRestUnidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextRestUnidActionPerformed

    private void BotonRestUnidMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonRestUnidMouseClicked
        // TODO add your handling code here:
        consultasBaseDeDatos consulta = new BaseDeDatos();
        float cantidad = Float.parseFloat(cantidadCC.getText());
        cantidad-=1;
        boolean rest = consulta.ModificarCantidad(nUsuario, NombreRestaurante.getText(),nombrePlato.getText(), cantidad);
            cantidadCC.setText(Float.toString(cantidad));
        if(cantidad == 1){
            TextRestUnid.setVisible(false);
            BotonRestUnid.setVisible(false);
            BotonBorrarUnid.setVisible(true);  
        }  
    }//GEN-LAST:event_BotonRestUnidMouseClicked

    private void BotonBorrarUnidMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonBorrarUnidMouseClicked
        // TODO add your handling code here:
        
        consultasBaseDeDatos consulta = new BaseDeDatos();
        boolean res = consulta.EliminarPedido(nUsuario, NombreRestaurante.getText(), nombrePlato.getText());
        if(res == true){
          mostrarPedidos();  
        }
        
        float valor = 0;
        valor = consulta.darPrecioPlato(NombreRestaurante.getText(), nombrePlato.getText());
        float lol = subtotalF - valor;
        subTotal.setText(Float.toString(lol));
        
    }//GEN-LAST:event_BotonBorrarUnidMouseClicked

    private void BotonRealizarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRealizarPedidoActionPerformed
        // TODO add your handling code here:
        Calendar calendario = Calendar.getInstance();
        consultasBaseDeDatos consulta = new BaseDeDatos();
        int hora, minutos;
        hora = calendario.get(Calendar.HOUR_OF_DAY);
        minutos = calendario.get(Calendar.MINUTE);

        boolean resp = consulta.ValidarDifRest(nUsuario);
        if(resp == true){ // Si el carro de compras tiene muchos pedidos de varios restaurantes
           JOptionPane.showMessageDialog(null, "No se puede realizar el pedido porque hay mÃ¡s de un restaurante");  
        }
        else{ //Revisa los horarios 
           
            
            String nRestaurante = consulta.darRestaurantePedido(nUsuario);
            String horario = consulta.darHorarioRest(nRestaurante);
            
            if(horario!=null){
                int horaRA, minRA, horaRC, minRC;
              String[] partes;
              String apertura, cierre;
              partes = horario.split("/");
              apertura = partes[0];
              cierre = partes[1];
              partes = apertura.split(":");
              horaRA = Integer.parseInt(partes[0]);
              minRA = Integer.parseInt(partes[1]);
              partes = cierre.split(":");
              horaRC = Integer.parseInt(partes[0]);
              minRC = Integer.parseInt(partes[1]);

              if(horaRA <= hora && horaRC >= hora ){
                  PantallaPedido p = new PantallaPedido(nUsuario);
                  p.setVisible(true);
                  this.dispose(); 
              }
              else{
                   JOptionPane.showMessageDialog(null, "El restaurante no esta disponible en este momento, intenta despues!");
              } 
              
            }
            
            //BORRARRRRRRRRRRRRRRRRRRRRRRRRRRRRRR
            PantallaPedido p = new PantallaPedido(nUsuario);
            p.setVisible(true);
            this.dispose();
            
        }
    
        
    }//GEN-LAST:event_BotonRealizarPedidoActionPerformed

    private void subTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subTotalActionPerformed

    private void VaciarCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VaciarCCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_VaciarCCActionPerformed
    public void PantallaVacia(){
        precioPlato.setVisible(false);
        Tapar.setVisible(false);
        ListaPedidosCC.setVisible(false);
        VaciarCC.setVisible(false);
        NombreRestaurante.setVisible(false);
        FotoRestaurante.setVisible(false);
        FotoPedido.setVisible(false);
        nombrePlato.setVisible(false);
        descripcionPlato.setVisible(false);
        BotonRealizarPedido.setVisible(false);
        BotonBorrarUnid.setVisible(false);
        BotonSumUnid.setVisible(false);
        cantidadCC.setVisible(false);
        FondoPantalla.setVisible(false);
        FondoCCVacio.setVisible(true);
        textCarroV.setVisible(true);
        BotonRestUnid.setVisible(false);
        TextRestUnid.setVisible(false);
        subTotal.setVisible(false);
    }
    
     
    public void mostrarPedidos(){
        Tapar.setVisible(true);
        nombrePlato.setText("");
        NombreRestaurante.setText("");
        descripcionPlato.setText("");
        precioPlato.setText("");
        DefaultListModel pedidos = new DefaultListModel<>();
        pedidos.clear();
        consultasBaseDeDatos consulta = new BaseDeDatos();
        
        ArrayList<String> carritoCompras= new ArrayList<String>();
        carritoCompras= consulta.darCarroCompras(nUsuario);
               
        String respuesta;
        String[] partes;
       
        if(!carritoCompras.isEmpty()){          
          for(int i=0; i < carritoCompras.size();i++ ){
            //Divido lo que llega de la consulta
            respuesta = carritoCompras.get(i);
            partes= respuesta.split(",");
            restaurantesCC.add(partes[0]);
            platoCC.add(partes[1]);
            pedidos.addElement(partes[1]);
          }
          jList1.setModel(pedidos); //Muestra los nombres de los platos de un usuario  
        }
        else{
            PantallaVacia(); 
        }
        
        float subT =0, precioPA;
        float cantidad = 0;
        for(int i = 0; i < platoCC.size();i++){
          precioPA = consulta.darPrecioPlato(restaurantesCC.get(i), platoCC.get(i));
          cantidad = consulta.darCantidad(nUsuario, restaurantesCC.get(i), platoCC.get(i));
          subT+=precioPA * cantidad; 
        }
        subtotalF = subT;
        subTotal.setText(Float.toString(subT));
        
        
          
    }
    
    public void transparenciaDelBoton(){
        BotonRealizarPedido.setOpaque(false);
        BotonRealizarPedido.setBackground(new Color(0,0,0,0));
        BotonBorrarUnid.setOpaque(false);
        BotonBorrarUnid.setBackground(new Color(0,0,0,0));
        BotonSumUnid.setOpaque(false);
        BotonSumUnid.setBackground(new Color(0,0,0,0));
        BotonRestUnid.setOpaque(false);
        BotonRestUnid.setBackground(new Color(0,0,0,0));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaCarroCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaCarroCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaCarroCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaCarroCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PantallaCarroCompras().setVisible(true);
            }
        });
        
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonAtrasCC;
    private javax.swing.JButton BotonBorrarUnid;
    private javax.swing.JButton BotonRealizarPedido;
    private javax.swing.JButton BotonRestUnid;
    private javax.swing.JButton BotonSumUnid;
    private javax.swing.JLabel FondoCCVacio;
    private javax.swing.JLabel FondoPantalla;
    private javax.swing.JLabel FotoPedido;
    private javax.swing.JLabel FotoRestaurante;
    private javax.swing.JScrollPane ListaPedidosCC;
    private javax.swing.JTextField NombreRestaurante;
    private javax.swing.JTextField Tapar;
    private javax.swing.JTextField TextRestUnid;
    private javax.swing.JButton VaciarCC;
    private javax.swing.JTextField cantidadCC;
    private javax.swing.JTextField descripcionPlato;
    private javax.swing.JList<String> jList1;
    private javax.swing.JTextField nombrePlato;
    private javax.swing.JTextField precioPlato;
    private javax.swing.JTextField subTotal;
    private javax.swing.JTextField textCarroV;
    // End of variables declaration//GEN-END:variables
}

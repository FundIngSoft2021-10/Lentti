/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import Controlador.consultasBaseDeDatos;
import Modelo.BaseDeDatos;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Camilo Hernández Guerrero
 */
public class PantallaModificarRestaurante extends javax.swing.JFrame {
    String usuario = "";
    File Imagen;
    JFileChooser buscador;
    String apertura = null;
    String cierre = null;
    public PantallaModificarRestaurante() 
    {
        initComponents();
        Transparencia();
        this.setLocationRelativeTo(null);
    }
    
    public PantallaModificarRestaurante(String usuario)
    {
        initComponents();
        Transparencia();
        this.setLocationRelativeTo(null);
        this.usuario = usuario;
        consultasBaseDeDatos consulta = new BaseDeDatos();
        ImageIcon imagenPoner = consulta.ImagenRestaurante(usuario);
        Icon imagen = new ImageIcon(imagenPoner.getImage().getScaledInstance(this.jLabelImagen.getWidth(), this.jLabelImagen.getHeight(), Image.SCALE_SMOOTH));
        this.jLabelImagen.setIcon(imagen);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonModImagen1 = new javax.swing.JButton();
        jTextFieldNombreRestaurante = new javax.swing.JTextField();
        jTextFieldModNombre = new javax.swing.JTextField();
        jTextFieldModDireccion = new javax.swing.JTextField();
        jTextFieldModDescripcion = new javax.swing.JTextField();
        jTextFieldModCostoDeEnvio = new javax.swing.JTextField();
        jTextFieldModNIT = new javax.swing.JTextField();
        jTextFieldModPalabrasClave = new javax.swing.JTextField();
        jButtonCargarImagen = new javax.swing.JButton();
        Cierre = new javax.swing.JComboBox<>();
        Apertura = new javax.swing.JComboBox<>();
        jLabelImagen = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButtonModDireccion = new javax.swing.JButton();
        jButtonModDescripcion = new javax.swing.JButton();
        jButtonModCostoDeEnvio = new javax.swing.JButton();
        jButtonModImagen = new javax.swing.JButton();
        jButtonModNIT = new javax.swing.JButton();
        jButtonModPalabrasClave = new javax.swing.JButton();
        jButtonModNombre = new javax.swing.JButton();
        jButtonAtras = new javax.swing.JButton();
        ModificarHoras = new javax.swing.JButton();

        jButtonModImagen1.setText("Modificar costo de envío");
        jButtonModImagen1.setToolTipText("");
        jButtonModImagen1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModImagen1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconImage(getIconImage());
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextFieldNombreRestaurante.setBorder(null);
        getContentPane().add(jTextFieldNombreRestaurante, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 120, 380, 40));

        jTextFieldModNombre.setBorder(null);
        jTextFieldModNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldModNombreActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldModNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 80, 290, 30));

        jTextFieldModDireccion.setBorder(null);
        getContentPane().add(jTextFieldModDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 230, 380, 40));

        jTextFieldModDescripcion.setBorder(null);
        getContentPane().add(jTextFieldModDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 300, 360, 50));

        jTextFieldModCostoDeEnvio.setBorder(null);
        jTextFieldModCostoDeEnvio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldModCostoDeEnvioActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldModCostoDeEnvio, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 380, 340, 40));

        jTextFieldModNIT.setBorder(null);
        jTextFieldModNIT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldModNITActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldModNIT, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 180, 380, 30));

        jTextFieldModPalabrasClave.setBorder(null);
        jTextFieldModPalabrasClave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldModPalabrasClaveActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldModPalabrasClave, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 640, 370, 40));

        jButtonCargarImagen.setFont(new java.awt.Font("Yu Gothic", 0, 18)); // NOI18N
        jButtonCargarImagen.setText("Cargar Imagen");
        jButtonCargarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCargarImagenActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonCargarImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 590, 160, 30));

        Cierre.setFont(new java.awt.Font("Yu Gothic", 0, 14)); // NOI18N
        Cierre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "7:00", "8:00", "9:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00", "20:00", "21:00", "22:00" }));
        Cierre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CierreMouseClicked(evt);
            }
        });
        getContentPane().add(Cierre, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 530, 110, 30));

        Apertura.setFont(new java.awt.Font("Yu Gothic", 0, 14)); // NOI18N
        Apertura.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "7:00", "8:00", "9:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00", "20:00", "21:00", "22:00" }));
        Apertura.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AperturaMouseClicked(evt);
            }
        });
        getContentPane().add(Apertura, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 490, 110, 30));
        getContentPane().add(jLabelImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 440, 110, 120));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/PantallaModifRest.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jButtonModDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModDireccionActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonModDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 250, 100, 40));

        jButtonModDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModDescripcionActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonModDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 310, 100, 40));

        jButtonModCostoDeEnvio.setToolTipText("");
        jButtonModCostoDeEnvio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModCostoDeEnvioActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonModCostoDeEnvio, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 380, 100, 40));

        jButtonModImagen.setToolTipText("");
        jButtonModImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModImagenActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonModImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 480, 100, 40));

        jButtonModNIT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModNITActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonModNIT, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 200, 100, 40));

        jButtonModPalabrasClave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModPalabrasClaveActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonModPalabrasClave, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 580, 100, 50));

        jButtonModNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModNombreActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonModNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 150, 100, 40));

        jButtonAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtrasActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonAtras, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 10, 110, 60));

        ModificarHoras.setText("jButton1");
        ModificarHoras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ModificarHorasMouseClicked(evt);
            }
        });
        getContentPane().add(ModificarHoras, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 500, 100, 50));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonModDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModDireccionActionPerformed
        consultasBaseDeDatos consulta = new BaseDeDatos();
        boolean resultado = false;
        
        if (this.jTextFieldModDireccion.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "El campo está vacio.");
        }
        else
        {
            resultado = consulta.ModificarDireccionRestaurante(this.jTextFieldNombreRestaurante.getText(), this.jTextFieldModDireccion.getText());
            
            if (resultado = true)
            {
                JOptionPane.showMessageDialog(null, "Dirección modificada satisfactoriamente.");
            }
        } 
    }//GEN-LAST:event_jButtonModDireccionActionPerformed

    private void jButtonModNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModNombreActionPerformed
        consultasBaseDeDatos consulta = new BaseDeDatos();
        boolean resultado = false;
        
        if (this.jTextFieldModNombre.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "El campo está vacio.");
        }
        else if (!consulta.ValidarExistenciaRestaurante(this.jTextFieldNombreRestaurante.getText()))
        {
            JOptionPane.showMessageDialog(null, "El restaurante dado no existe.");
        }
        else
        {
            resultado = consulta.ModificarNombreRestaurante(this.jTextFieldNombreRestaurante.getText(), this.jTextFieldModNombre.getText());
            
            if (resultado == true)
            {
                JOptionPane.showMessageDialog(null, "Nombre modificado satisfactoriamente.");
            }
        } 
    }//GEN-LAST:event_jButtonModNombreActionPerformed

    private void jButtonAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtrasActionPerformed
        PantallaInicialAdministrador pantallaGestion = new PantallaInicialAdministrador(usuario);
        pantallaGestion.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_jButtonAtrasActionPerformed

    private void jButtonModDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModDescripcionActionPerformed
        consultasBaseDeDatos consulta = new BaseDeDatos();
        boolean resultado = false;
        
        if (this.jTextFieldModDescripcion.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "El campo está vacio.");
        }
        else
        {
            
            resultado = consulta.ModificarDescripcionRestaurante(this.jTextFieldNombreRestaurante.getText(), this.jTextFieldModDescripcion.getText());
            
            if (resultado == true)
            {
                JOptionPane.showMessageDialog(null, "Descripción modificada satisfactoriamente.");
            }
        }        
    }//GEN-LAST:event_jButtonModDescripcionActionPerformed

    private void jButtonModCostoDeEnvioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModCostoDeEnvioActionPerformed
        consultasBaseDeDatos consulta = new BaseDeDatos();
        boolean resultado = false;
        
        if (this.jTextFieldModCostoDeEnvio.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "El campo está vacio.");
        }
        else
        {
            resultado = consulta.ModificarCostoDeEnvioRestaurante(this.jTextFieldNombreRestaurante.getText(), this.jTextFieldModCostoDeEnvio.getText());
            
            if (resultado == true)
            {
                JOptionPane.showMessageDialog(null, "Costo de envío modificado satisfactoriamente.");
            }
        }       
    }//GEN-LAST:event_jButtonModCostoDeEnvioActionPerformed

    private void jButtonModImagen1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModImagen1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonModImagen1ActionPerformed

    private void jButtonModImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModImagenActionPerformed
        consultasBaseDeDatos consulta = new BaseDeDatos();
        boolean resultado = false;
        
        if(this.buscador.getSelectedFile() == null)
        {
            JOptionPane.showMessageDialog(null, "El campo está vacio.");
        }
        else
        {
            resultado = consulta.ModificarImagenRestaurante(this.jTextFieldNombreRestaurante.getText(), this.buscador);
            
            if (resultado == true)
            {
                JOptionPane.showMessageDialog(null, "Imagen modificada satisfactoriamente.");
            }
        }      
    }//GEN-LAST:event_jButtonModImagenActionPerformed

    private void jTextFieldModNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldModNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldModNombreActionPerformed

    private void jTextFieldModCostoDeEnvioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldModCostoDeEnvioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldModCostoDeEnvioActionPerformed

    private void jTextFieldModNITActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldModNITActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldModNITActionPerformed

    private void jButtonModNITActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModNITActionPerformed
        consultasBaseDeDatos consulta = new BaseDeDatos();
        boolean resultado = false;
        
        if(this.jTextFieldModNIT.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "El campo está vacio.");
        }
        else
        {
            resultado = consulta.ModificarNITRestaurante(this.jTextFieldNombreRestaurante.getText(), this.jTextFieldModNIT.getText());
            
            if (resultado == true)
            {
                JOptionPane.showMessageDialog(null, "N.I.T modificado satisfactoriamente.");
            }
        }   
    }//GEN-LAST:event_jButtonModNITActionPerformed

    private void jButtonModPalabrasClaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModPalabrasClaveActionPerformed
        consultasBaseDeDatos consulta = new BaseDeDatos();
        boolean resultado = false;
        
        if(this.jTextFieldModNIT.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "El campo está vacio.");
        }
        else
        {
            resultado = consulta.ModificarPalabrasClaveRestaurante(this.jTextFieldNombreRestaurante.getText(), this.jTextFieldModPalabrasClave.getText());
           
            if (resultado == true)
            {
                JOptionPane.showMessageDialog(null, "Palabras clave modificadas satisfactoriamente.");
            }
        }
    }//GEN-LAST:event_jButtonModPalabrasClaveActionPerformed

    private void jTextFieldModPalabrasClaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldModPalabrasClaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldModPalabrasClaveActionPerformed

    private void jButtonCargarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCargarImagenActionPerformed
        // TODO add your handling code here:
        buscador =new JFileChooser();
        buscador.setMultiSelectionEnabled(false);
        buscador.setDialogTitle("Buscar Imagen restaurante");
        if(buscador.showOpenDialog(this) == JFileChooser.APPROVE_OPTION && !buscador.isDirectorySelectionEnabled())
        {   
            if(buscador.getSelectedFile().toString().endsWith(".jpg") ||buscador.getSelectedFile().toString().endsWith(".png") )
            {
                System.out.println("archivo -> "+ buscador.getSelectedFile().toString());
                this.Imagen = new File ( buscador.getSelectedFile().toString());
                ImageIcon imagenPoner = new ImageIcon( buscador.getSelectedFile().toString());
                Icon Etiqueta = new ImageIcon(imagenPoner.getImage().getScaledInstance(this.jLabelImagen.getWidth(), this.jLabelImagen.getHeight(), Image.SCALE_SMOOTH));
                this.jLabelImagen.setIcon(Etiqueta);
            }
            else
            {
                JOptionPane.showMessageDialog(null, "No es un formato aceptado, debe ser jpg o png");
            }
            
             
            //this.jLabel1.setIcon(new ImageIcon(image));
        }
    }//GEN-LAST:event_jButtonCargarImagenActionPerformed

    private void AperturaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AperturaMouseClicked
        // TODO add your handling code here:
        //Almacenar apertura
        apertura = Apertura.getSelectedItem().toString();
    }//GEN-LAST:event_AperturaMouseClicked

    private void CierreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CierreMouseClicked
        // TODO add your handling code here:
        cierre = Cierre.getSelectedItem().toString();
    }//GEN-LAST:event_CierreMouseClicked

    private void ModificarHorasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ModificarHorasMouseClicked
        // TODO add your handling code here:
        
        consultasBaseDeDatos consulta = new BaseDeDatos();
        boolean resultado = false;
        
        if(apertura == null || cierre == null)
        {
            JOptionPane.showMessageDialog(null, "No se ha seleccionado nada en apertura o cierre.");
        }
        else
        {
            String horarios;
            horarios = apertura+"/"+cierre;
            resultado = consulta.ModificarHorarioRestaurante(this.jTextFieldNombreRestaurante.getText(), horarios);
            if (resultado == true)
            {
                JOptionPane.showMessageDialog(null, "Horario modificado correctamente");
            }
        }
    }//GEN-LAST:event_ModificarHorasMouseClicked

    /**
     * @param args the command line arguments
     */
    
    public void Transparencia ()
    {
        jButtonAtras.setOpaque(false);
        jButtonAtras.setBackground(new Color(0, 0, 0, 0));
        jButtonModCostoDeEnvio.setOpaque(false);
        jButtonModCostoDeEnvio.setBackground(new Color(0, 0, 0, 0));
        jButtonModDescripcion.setOpaque(false);
        jButtonModDescripcion.setBackground(new Color(0, 0, 0, 0));
        jButtonModDireccion.setOpaque(false);
        jButtonModDireccion.setBackground(new Color(0, 0, 0, 0));
        jButtonModImagen.setOpaque(false);
        jButtonModImagen.setBackground(new Color(0, 0, 0, 0));
        jButtonModNombre.setOpaque(false);
        jButtonModNombre.setBackground(new Color(0, 0, 0, 0));
        jButtonModNIT.setOpaque(false);
        jButtonModNIT.setBackground(new Color(0, 0, 0, 0));
        jButtonModPalabrasClave.setOpaque(false);
        jButtonModPalabrasClave.setBackground(new Color(0, 0, 0, 0));
        jTextFieldModCostoDeEnvio.setOpaque(false);
        jTextFieldModCostoDeEnvio.setBackground(new Color(0, 0, 0, 0));
        jTextFieldModDescripcion.setOpaque(false);
        jTextFieldModDescripcion.setBackground(new Color(0, 0, 0, 0));
        jTextFieldModDireccion.setOpaque(false);
        jTextFieldModDireccion.setBackground(new Color(0, 0, 0, 0));
        jTextFieldModNombre.setOpaque(false);
        jTextFieldModNombre.setBackground(new Color(0, 0, 0, 0));
        jTextFieldNombreRestaurante.setOpaque(false);
        jTextFieldNombreRestaurante.setBackground(new Color(0, 0, 0, 0));
        jTextFieldModNIT.setOpaque(false);
        jTextFieldModNIT.setBackground(new Color(0, 0, 0, 0));
        jTextFieldModPalabrasClave.setOpaque(false);
        jTextFieldModPalabrasClave.setBackground(new Color(0, 0, 0, 0));
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaModificarRestaurante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaModificarRestaurante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaModificarRestaurante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaModificarRestaurante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PantallaModificarRestaurante().setVisible(true);
                try {
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(PantallaCrearRestaurante.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Apertura;
    private javax.swing.JComboBox<String> Cierre;
    private javax.swing.JButton ModificarHoras;
    private javax.swing.JButton jButtonAtras;
    private javax.swing.JButton jButtonCargarImagen;
    private javax.swing.JButton jButtonModCostoDeEnvio;
    private javax.swing.JButton jButtonModDescripcion;
    private javax.swing.JButton jButtonModDireccion;
    private javax.swing.JButton jButtonModImagen;
    private javax.swing.JButton jButtonModImagen1;
    private javax.swing.JButton jButtonModNIT;
    private javax.swing.JButton jButtonModNombre;
    private javax.swing.JButton jButtonModPalabrasClave;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelImagen;
    private javax.swing.JTextField jTextFieldModCostoDeEnvio;
    private javax.swing.JTextField jTextFieldModDescripcion;
    private javax.swing.JTextField jTextFieldModDireccion;
    private javax.swing.JTextField jTextFieldModNIT;
    private javax.swing.JTextField jTextFieldModNombre;
    private javax.swing.JTextField jTextFieldModPalabrasClave;
    private javax.swing.JTextField jTextFieldNombreRestaurante;
    // End of variables declaration//GEN-END:variables
}
